import React, { useState } from "react";
import { Rate, Tabs, Modal } from "antd";
import Slider from "react-slick";
import ExamCardItem from "./components/ExamCardItem";

const { TabPane } = Tabs;

const examData = {
  title:
    "20 B√†i T·∫≠p Ki·ªÉm Tra, R√®n Luy·ªán JavaScript Ph·∫ßn 4 (C√¢u h·ªèi v√† h∆∞·ªõng d·∫´n chi ti·∫øt)",
  author: "Nguyen Trung Toan",
  rating: 5,
  ratingCount: 3,
  questions: "20 c√¢u",
  time: "30:00",
  views: "374",
  description:
    "Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi b√†i ki·ªÉm tra thu·ªôc series JavaScript c·ªßa m√¨nh, 20 c√¢u h·ªèi, b√†i t·∫≠p JavaScript gi√∫p b·∫°n c√≥ th·ªÉ th·ª±c h√†nh th√™m nhi·ªÅu ki·∫øn th·ª©c ƒë·ªÉ n√¢ng cao k·ªπ nƒÉng code, n√¢ng cao tr√¨nh ƒë·ªô. C√°c c√¢u h·ªèi ƒë·ªÅu c√≥ s·∫µn ƒë√°p √°n v√† gi·∫£i th√≠ch chi ti·∫øt. H√£y b·∫Øt ƒë·∫ßu ki·ªÉm tra ngay n√†o! 20 c√¢u h·ªèi trong 30 ph√∫t s·∫Ω kh√¥ng l√†m kh√≥ b·∫°n ƒë√¢u, h√£y th·ª≠ v∆∞·ª£t qua th·ª≠ th√°ch n√†y nh√©! K·∫øt qu·∫£ s·∫Ω hi·ªÉn th·ªã ngay sau khi b·∫°n ho√†n th√†nh b√†i ki·ªÉm tra. Ch√∫c b·∫°n ƒë·∫°t k·∫øt qu·∫£ t·ªët nh√©! KQUIZ",
  practiceInfo:
    "Ch·ªâ m·ªü b·∫±ng b·∫£n video b√†i t·∫≠p ƒë·∫ßy ƒë·ªß trong series JavaScript m·ªói ng√†y 20 c√¢u/nh√°nh thu·ªôc c√°c m·ª©c ƒë·ªô kh√≥, t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao. H√£y b·∫Øt ƒë·∫ßu ngay n√†o! B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p t√†i kho·∫£n ƒë·ªÉ l∆∞u k·∫øt qu·∫£ v√† xem l·∫°i sau khi ho√†n th√†nh.",
  leaderboard: {
    name: "Tr·∫ßn Minh Ph√∫c",
    date: "01/38/05/2023",
    score: "20/20",
    completion: "100%",
  },
  tags: ["JavaScript"],
  reviews: [
    { user: "PA_7380e", questions: "14/20 c√¢u", rating: 5 },
    { user: "haophanQN@gmail.com", questions: "8/20 c√¢u", rating: 4 },
    { user: "zoroso.black", questions: "6/20 c√¢u", rating: 3 },
  ],
  relatedExams: [
    {
      image: "https://picsum.photos/40/40?random=10",
      title:
        "20 B√†i T·∫≠p Ki·ªÉm Tra, R√®n Luy·ªán JavaScript (C√≥ video h∆∞·ªõng d·∫´n chi ti·∫øt)",
      questions: "20 c√¢u",
      time: "30:00",
      views: "444",
      category: ["JavaScript"],
    },
    {
      image: "https://picsum.photos/40/40?random=11",
      title: "ƒê·ªÅ C√≥ H·∫≠u Ph·∫ø Th·ª•ng Vi·ªác JavaScript (ƒê·ªÅ n√¢ng cao)",
      questions: "20 c√¢u",
      time: "30:00",
      views: "448",
      category: ["JavaScript"],
    },
    {
      image: "https://picsum.photos/40/40?random=12",
      title: "B·ªô 20 c√¢u h·ªèi MySQL c∆° b·∫£n",
      questions: "20 c√¢u",
      time: "30:00",
      views: "578",
      category: ["MySQL"],
    },
  ],
};

const ExamDetailPage: React.FC = () => {
  const [isModal, setIsModal] = useState<boolean>(false);

  const carouselSettings = {
    dots: true,
    infinite: true,
    speed: 500,
    slidesToShow: 3,
    slidesToScroll: 1,
    arrows: true,
    responsive: [
      {
        breakpoint: 1024,
        settings: {
          slidesToShow: 2,
        },
      },
      {
        breakpoint: 768,
        settings: {
          slidesToShow: 1,
        },
      },
    ],
  };

  const handleSubmit = () => {
    setIsModal(false);
  };

  return (
    <div className="bg-gray-100 min-h-screen py-10 px-4 md:px-6">
      <div className="max-w-6xl mx-auto space-y-8">
        {/* Header */}
        <div className="bg-white rounded-xl shadow p-6 space-y-4">
          <div className="flex flex-col md:flex-row md:items-center md:justify-between">
            <div className="space-y-2 md:w-2/3">
              <h1 className="text-2xl md:text-3xl font-bold text-black">
                {examData.title}
              </h1>
              <div className="flex items-center space-x-2 text-gray-600">
                <span>{examData.author}</span>
                <Rate
                  disabled
                  defaultValue={examData.rating}
                  className="text-yellow-400"
                />
                <span className="text-sm">
                  ({examData.ratingCount} ƒë√°nh gi√°)
                </span>
              </div>
              <div className="flex space-x-4 text-gray-500 text-sm">
                <span>üìù {examData.questions}</span>
                <span>‚è∞ {examData.time}</span>
                <span>üëÅÔ∏è {examData.views}</span>
              </div>
            </div>
            <div className="mt-4 md:mt-0 flex gap-3">
              <button
                onClick={() => setIsModal(true)}
                className="bg-yellow-500 font-semibold text-white p-1 rounded hover:bg-yellow-600 hover:text-white transition-all duration-200"
              >
                B·∫Øt ƒë·∫ßu thi
              </button>
              <Modal
                open={isModal}
                title={"X√°c nh·∫≠n v√†o l√†m ƒë·ªÅ thi"}
                onCancel={() => setIsModal(false)}
                footer={null}
              >
                <div className="flex flex-col gap-4">
                  <div className="space-y-1">
                    <h2 className="text-lg font-semibold text-gray-800">
                      {examData.title}
                    </h2>
                    <div className="flex items-center text-gray-600 gap-6 text-sm">
                      <div className="flex items-center gap-1">
                        <span role="img" aria-label="questions">
                          üßÆ
                        </span>
                        <span>S·ªë l∆∞·ª£ng c√¢u h·ªèi: {examData.questions}</span>
                      </div>
                      <div className="flex items-center gap-1">
                        <span role="img" aria-label="time">
                          ‚è±
                        </span>
                        <span>Th·ªùi l∆∞·ª£ng: {examData.time}</span>
                      </div>
                    </div>
                  </div>
                  <div>
                    {examData.tags.map((item, index) => (
                      <span
                        key={index}
                        className="bg-yellow-400 text-white text-xs font-semibold px-2 py-1 rounded"
                      >
                        {item}
                      </span>
                    ))}
                  </div>
                  <button
                    onClick={handleSubmit}
                    className="bg-yellow-500 font-semibold text-white p-1 rounded hover:bg-yellow-600 hover:text-white transition-all duration-200"
                  >
                    B·∫Øt ƒë·∫ßu
                  </button>
                </div>
              </Modal>
              <button className="bg-white font-semibold text-black p-1 rounded hover:bg-gray-600 hover:text-white transition-all duration-200">
                Chia s·∫ª ƒë·ªÅ thi
              </button>
            </div>
          </div>
        </div>

        {/* Image + Tabs */}
        <div className="bg-white rounded-xl shadow p-6">
          <div className="flex flex-col md:flex-row gap-6">
            <div className="md:w-1/3">
              <img
                src="https://picsum.photos/600/320?random=1"
                alt="Minh h·ªça"
                className="w-full h-auto rounded-xl shadow-sm"
              />
            </div>
            <div className="md:w-2/3">
              <Tabs defaultActiveKey="1" className="mt-4 md:mt-0">
                <TabPane tab="üìò M√¥ t·∫£" key="1">
                  <p className="text-gray-600">{examData.description}</p>
                </TabPane>
                <TabPane tab="üí° T·ª± luy·ªán" key="2">
                  <p className="text-gray-600">{examData.practiceInfo}</p>
                </TabPane>
                <TabPane tab="üè∑Ô∏è T·ª´ kh√≥a" key="3">
                  <div className="flex flex-wrap gap-2">
                    {examData.tags.map((tag, index) => (
                      <span
                        key={index}
                        className="bg-gray-200 text-gray-700 text-xs px-2 py-1 rounded-full"
                      >
                        {tag}
                      </span>
                    ))}
                  </div>
                </TabPane>
                <TabPane tab="üèÜ Vinh danh" key="4">
                  <div className="flex items-center gap-4">
                    <div className="w-14 h-14 rounded-full bg-yellow-300 flex items-center justify-center font-bold text-lg text-white">
                      {examData.leaderboard.name[0]}
                    </div>
                    <div className="text-sm">
                      <p className="font-medium text-black">
                        {examData.leaderboard.name}
                      </p>
                      <p className="text-gray-500">
                        Ng√†y: {examData.leaderboard.date}
                      </p>
                      <p className="text-gray-500">
                        ƒêi·ªÉm: {examData.leaderboard.score}
                      </p>
                      <p className="text-gray-500">
                        Ho√†n th√†nh: {examData.leaderboard.completion}
                      </p>
                    </div>
                  </div>
                </TabPane>
              </Tabs>
            </div>
          </div>
        </div>

        {/* Reviews */}
        <section className="bg-white rounded-xl shadow p-6">
          <h2 className="text-lg font-semibold">‚≠ê ƒê√°nh gi√° ƒë·ªÅ thi</h2>
          <div className="mt-4 space-y-4">
            {examData.reviews.map((review, index) => (
              <div
                key={index}
                className="flex justify-between items-center bg-white p-4 rounded-md shadow-sm"
              >
                <div className="flex items-center gap-3">
                  <div className="w-10 h-10 rounded-full bg-gray-300 flex items-center justify-center text-white font-bold">
                    {review.user[0].toUpperCase()}
                  </div>
                  <div>
                    <p className="font-semibold text-black">{review.user}</p>
                    <p className="text-gray-500 text-sm">{review.questions}</p>
                  </div>
                </div>
                <div className="flex-shrink-0">
                  <Rate
                    disabled
                    defaultValue={review.rating}
                    className="text-yellow-400"
                  />
                </div>
              </div>
            ))}
          </div>
        </section>

        {/* Related exams */}
        <section className="bg-white rounded-xl shadow p-6">
          <h2 className="text-lg font-semibold mb-4">üß† C√°c ƒë·ªÅ thi t∆∞∆°ng t·ª±</h2>
          <Slider {...carouselSettings}>
            {examData.relatedExams.map((exam, index) => (
              <div key={index} className="px-2">
                <ExamCardItem {...exam} />
              </div>
            ))}
          </Slider>
        </section>
      </div>
    </div>
  );
};

export default ExamDetailPage;
